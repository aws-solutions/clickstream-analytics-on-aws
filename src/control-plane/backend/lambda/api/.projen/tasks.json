{
  "tasks": {
    "build": {
      "name": "build",
      "description": "Full release build",
      "steps": [
        {
          "spawn": "pre-compile"
        },
        {
          "spawn": "compile"
        },
        {
          "spawn": "post-compile"
        },
        {
          "spawn": "test"
        },
        {
          "spawn": "package"
        }
      ]
    },
    "compile": {
      "name": "compile",
      "description": "Only compile",
      "steps": [
        {
          "exec": "tsc --build"
        }
      ]
    },
    "default": {
      "name": "default",
      "description": "Synthesize project files",
      "steps": [
        {
          "exec": "npx projen default",
          "cwd": "../../../../.."
        }
      ]
    },
    "install": {
      "name": "install",
      "description": "Install project dependencies and update lockfile (non-frozen)",
      "steps": [
        {
          "exec": "yarn install --check-files"
        }
      ]
    },
    "install:ci": {
      "name": "install:ci",
      "description": "Install project dependencies using frozen lockfile",
      "steps": [
        {
          "exec": "yarn install --check-files --frozen-lockfile"
        }
      ]
    },
    "package": {
      "name": "package",
      "description": "Creates the distribution package",
      "steps": [
        {
          "exec": "mkdir -p dist/js"
        },
        {
          "exec": "mv $(npm pack) dist/js/"
        }
      ]
    },
    "post-compile": {
      "name": "post-compile",
      "description": "Runs after successful compilation"
    },
    "post-upgrade": {
      "name": "post-upgrade",
      "description": "Runs after upgrading dependencies"
    },
    "pre-compile": {
      "name": "pre-compile",
      "description": "Prepare the project for compilation"
    },
    "test": {
      "name": "test",
      "description": "Run tests",
      "steps": [
        {
          "exec": "jest --passWithNoTests --coverageProvider=v8 --updateSnapshot",
          "receiveArgs": true
        }
      ]
    },
    "test:watch": {
      "name": "test:watch",
      "description": "Run jest in watch mode",
      "steps": [
        {
          "exec": "jest --watch"
        }
      ]
    },
    "upgrade": {
      "name": "upgrade",
      "description": "upgrade dependencies",
      "env": {
        "CI": "0"
      },
      "steps": [
        {
          "exec": "npx npm-check-updates@16 --upgrade --target=minor --peer --dep=dev,peer,prod,optional --filter=@types/express,@types/jest,@types/jsonpath-plus,@types/mock-fs,@types/mustache,@types/node-fetch,@types/node,@types/supertest,@types/uuid,aws-sdk-client-mock-jest,aws-sdk-client-mock,constructs,jest,jest-junit,mock-fs,nodemon,projen,supertest,ts-jest,ts-node,typescript,@aws-lambda-powertools/logger,@aws-lambda-powertools/metrics,@aws-sdk/client-acm,@aws-sdk/client-cloudformation,@aws-sdk/client-cloudwatch-events,@aws-sdk/client-cloudwatch,@aws-sdk/client-dynamodb,@aws-sdk/client-ec2,@aws-sdk/client-iam,@aws-sdk/client-kafka,@aws-sdk/client-quicksight,@aws-sdk/client-redshift-data,@aws-sdk/client-redshift-serverless,@aws-sdk/client-redshift,@aws-sdk/client-route-53,@aws-sdk/client-s3,@aws-sdk/client-secrets-manager,@aws-sdk/client-sfn,@aws-sdk/client-sns,@aws-sdk/client-sts,@aws-sdk/credential-providers,@aws-sdk/lib-dynamodb,@aws-sdk/types,@aws-sdk/util-dynamodb,@smithy/node-http-handler,@smithy/util-stream-node,@types/aws-lambda,cidr-block,cron-parser,express-validator,express,fast-memoize,i18next-fs-backend,i18next,json-difference,jsonpath-plus,jsonwebtoken,jwks-rsa,mustache,node-cache,node-fetch,sql-formatter,ts-json-object,uuid"
        },
        {
          "exec": "yarn install --check-files"
        },
        {
          "exec": "yarn upgrade @types/express @types/jest @types/jsonpath-plus @types/mock-fs @types/mustache @types/node-fetch @types/node @types/supertest @types/uuid aws-sdk-client-mock-jest aws-sdk-client-mock constructs jest jest-junit mock-fs nodemon projen supertest ts-jest ts-node typescript @aws-lambda-powertools/logger @aws-lambda-powertools/metrics @aws-sdk/client-acm @aws-sdk/client-cloudformation @aws-sdk/client-cloudwatch-events @aws-sdk/client-cloudwatch @aws-sdk/client-dynamodb @aws-sdk/client-ec2 @aws-sdk/client-iam @aws-sdk/client-kafka @aws-sdk/client-quicksight @aws-sdk/client-redshift-data @aws-sdk/client-redshift-serverless @aws-sdk/client-redshift @aws-sdk/client-route-53 @aws-sdk/client-s3 @aws-sdk/client-secrets-manager @aws-sdk/client-sfn @aws-sdk/client-sns @aws-sdk/client-sts @aws-sdk/credential-providers @aws-sdk/lib-dynamodb @aws-sdk/types @aws-sdk/util-dynamodb @smithy/node-http-handler @smithy/util-stream-node @types/aws-lambda cidr-block cron-parser express-validator express fast-memoize i18next-fs-backend i18next json-difference jsonpath-plus jsonwebtoken jwks-rsa mustache node-cache node-fetch sql-formatter ts-json-object uuid"
        },
        {
          "exec": "npx projen"
        },
        {
          "spawn": "post-upgrade"
        }
      ]
    },
    "watch": {
      "name": "watch",
      "description": "Watch & compile in the background",
      "steps": [
        {
          "exec": "tsc --build -w"
        }
      ]
    }
  },
  "env": {
    "PATH": "$(npx -c \"node --print process.env.PATH\")"
  },
  "//": "~~ Generated by projen. To modify, edit .projenrc.js and run \"npx projen\"."
}
