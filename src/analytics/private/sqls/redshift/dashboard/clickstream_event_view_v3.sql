CREATE MATERIALIZED VIEW {{database_name}}.{{schema}}.{{viewName}}
BACKUP YES
SORTKEY (event_timestamp) 
AUTO REFRESH NO
AS
SELECT
  e.event_timestamp,
  e.event_id,
  e.event_time_msec,
  e.event_name,
  e.user_pseudo_id,
  e.user_id,
  e.session_id,
  u.user_id as latest_user_id,
  event_value,
  event_value_currency,
  event_bundle_sequence_id,
  ingest_time_msec,
  device_mobile_brand_name,
  device_mobile_model_name,
  device_manufacturer,
  device_carrier,
  device_network_type,
  device_operating_system,
  device_operating_system_version,
  device_vendor_id,
  device_advertising_id,
  device_system_language,
  device_time_zone_offset_seconds,
  device_ua_browser,
  device_ua_browser_version,
  device_ua_os,
  device_ua_os_version,
  device_ua_device,
  device_ua_device_category,
  device_screen_width,
  device_screen_height,
  device_viewport_width,
  device_viewport_height,
  device_ua.string as device_ua_string,
  geo_continent,
  geo_sub_continent,
  geo_country,
  geo_region,
  geo_metro,
  geo_city,
  geo_locale,
  traffic_source_source,
  traffic_source_medium,
  traffic_source_campaign,
  traffic_source_content,
  traffic_source_term,
  traffic_source_campaign_id,
  traffic_source_clid_platform,
  traffic_source_clid,
  traffic_source_channel_group,
  traffic_source_category,
  user_first_touch_time_msec,
  app_package_id,
  app_version,
  app_title,
  app_install_source,
  platform,
  project_id,
  app_id,
  screen_view_screen_name,
  screen_view_screen_id,
  screen_view_screen_unique_id,
  screen_view_previous_screen_name,
  screen_view_previous_screen_id,
  screen_view_previous_screen_unique_id,
  screen_view_previous_time_msec,
  screen_view_engagement_time_msec,
  case when screen_view_entrances then 'true' else 'false' end as screen_view_entrances,
  page_view_page_referrer,
  page_view_page_referrer_title,
  page_view_previous_time_msec,
  page_view_engagement_time_msec,
  page_view_page_title,
  page_view_page_url,
  page_view_page_url_path,
  page_view_hostname,
  page_view_latest_referrer,
  page_view_latest_referrer_host,
  case when page_view_entrances then 'true' else 'false' end as page_view_entrances,
  case when app_start_is_first_time then 'true' else 'false' end as app_start_is_first_time,
  upgrade_previous_app_version,
  upgrade_previous_os_version,
  search_key,
  search_term,
  outbound_link_classes,
  outbound_link_domain,
  outbound_link_id,
  outbound_link_url,
  case when outbound_link then 'true' else 'false' end as outbound_link,
  user_engagement_time_msec,
  scroll_engagement_time_msec,
  sdk_error_code,
  sdk_error_message,
  sdk_version,
  sdk_name,
  app_exception_message,
  app_exception_stack,
  custom_parameters_json_str,
  custom_parameters,
  e.session_duration,
  s.session_number,
  s.session_start_time_msec,
  session_source,
  session_medium,
  session_campaign,
  session_content,
  session_term,
  session_campaign_id,
  session_clid_platform,
  session_clid,
  session_channel_group,
  session_source_category,
  u.first_touch_time_msec,
  u.first_visit_date,
  u.first_referrer,
  u.first_traffic_category,
  u.first_traffic_source,
  u.first_traffic_medium,
  u.first_traffic_campaign,
  u.first_traffic_content,
  u.first_traffic_term,
  u.first_traffic_campaign_id,
  u.first_traffic_clid_platform,
  u.first_traffic_clid,
  u.first_traffic_channel_group,
  u.first_app_install_source,
  u.user_properties_json_str,
  u.user_properties,
  COALESCE(u.user_id, e.user_pseudo_id) as merged_user_id,
  CASE WHEN event_name = '_first_open' THEN COALESCE(u.user_id, e.user_pseudo_id) ELSE NULL END as new_user_indicator,
  CASE WHEN event_name IN ('_page_view', '_screen_view') THEN e.session_id ELSE NULL END as view_session_indicator,
  CASE WHEN event_name IN ('_page_view', '_screen_view') THEN e.event_id ELSE NULL END as view_event_indicator,
  CASE WHEN e.event_timestamp::date = u.first_visit_date THEN 'true' else 'false' END as is_first_day_event
FROM 
    {{database_name}}.{{schema}}.event_v2 as e
JOIN 
    {{database_name}}.{{schema}}.session_m_view as s ON e.user_pseudo_id = s.user_pseudo_id AND e.session_id = s.session_id
JOIN 
    {{database_name}}.{{schema}}.user_m_view_v2 as u ON e.user_pseudo_id = u.user_pseudo_id;
