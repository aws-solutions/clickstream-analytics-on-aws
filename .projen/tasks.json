{
  "tasks": {
    "build": {
      "name": "build",
      "description": "Full release build",
      "env": {
        "NODE_OPTIONS": "--max_old_space_size=6144"
      },
      "steps": [
        {
          "spawn": "default"
        },
        {
          "spawn": "pre-compile"
        },
        {
          "spawn": "compile"
        },
        {
          "spawn": "post-compile"
        },
        {
          "spawn": "test"
        },
        {
          "spawn": "package"
        }
      ]
    },
    "bundle": {
      "name": "bundle",
      "description": "Prepare assets"
    },
    "clobber": {
      "name": "clobber",
      "description": "hard resets to HEAD of origin and cleans the local repo",
      "env": {
        "BRANCH": "$(git branch --show-current)"
      },
      "steps": [
        {
          "exec": "git checkout -b scratch",
          "name": "save current HEAD in \"scratch\" branch"
        },
        {
          "exec": "git checkout $BRANCH"
        },
        {
          "exec": "git fetch origin",
          "name": "fetch latest changes from origin"
        },
        {
          "exec": "git reset --hard origin/$BRANCH",
          "name": "hard reset to origin commit"
        },
        {
          "exec": "git clean -fdx",
          "name": "clean all untracked files"
        },
        {
          "say": "ready to rock! (unpushed commits are under the \"scratch\" branch)"
        }
      ],
      "condition": "git diff --exit-code > /dev/null"
    },
    "compile": {
      "name": "compile",
      "description": "Only compile"
    },
    "default": {
      "name": "default",
      "description": "Synthesize project files",
      "steps": [
        {
          "exec": "node .projenrc.js"
        }
      ]
    },
    "deploy": {
      "name": "deploy",
      "description": "Deploys your CDK app to the AWS cloud",
      "steps": [
        {
          "exec": "cdk deploy",
          "receiveArgs": true
        }
      ]
    },
    "destroy": {
      "name": "destroy",
      "description": "Destroys your cdk app in the AWS cloud",
      "steps": [
        {
          "exec": "cdk destroy",
          "receiveArgs": true
        }
      ]
    },
    "diff": {
      "name": "diff",
      "description": "Diffs the currently deployed app against your code",
      "steps": [
        {
          "exec": "cdk diff"
        }
      ]
    },
    "eject": {
      "name": "eject",
      "description": "Remove projen from the project",
      "env": {
        "PROJEN_EJECTING": "true"
      },
      "steps": [
        {
          "spawn": "default"
        }
      ]
    },
    "eslint": {
      "name": "eslint",
      "description": "Runs eslint against the codebase",
      "steps": [
        {
          "exec": "eslint --ext .ts,.tsx --fix --no-error-on-unmatched-pattern src test build-tools .projenrc.js"
        }
      ]
    },
    "install": {
      "name": "install",
      "description": "Install project dependencies and update lockfile (non-frozen)",
      "steps": [
        {
          "exec": "yarn install --check-files"
        }
      ]
    },
    "install:ci": {
      "name": "install:ci",
      "description": "Install project dependencies using frozen lockfile",
      "steps": [
        {
          "exec": "yarn install --check-files --frozen-lockfile"
        }
      ]
    },
    "package": {
      "name": "package",
      "description": "Creates the distribution package"
    },
    "post-compile": {
      "name": "post-compile",
      "description": "Runs after successful compilation",
      "steps": [
        {
          "spawn": "synth:silent"
        }
      ]
    },
    "post-upgrade": {
      "name": "post-upgrade",
      "description": "Runs after upgrading dependencies"
    },
    "pre-compile": {
      "name": "pre-compile",
      "description": "Prepare the project for compilation"
    },
    "synth": {
      "name": "synth",
      "description": "Synthesizes your cdk app into cdk.out",
      "steps": [
        {
          "exec": "cdk synth"
        }
      ]
    },
    "synth:silent": {
      "name": "synth:silent",
      "description": "Synthesizes your cdk app into cdk.out and suppresses the template in stdout (part of \"yarn build\")",
      "steps": [
        {
          "exec": "cdk synth -q"
        }
      ]
    },
    "test": {
      "name": "test",
      "description": "Run tests",
      "steps": [
        {
          "exec": "jest --passWithNoTests --coverageProvider=v8 --updateSnapshot",
          "receiveArgs": true
        },
        {
          "spawn": "eslint"
        }
      ]
    },
    "test:watch": {
      "name": "test:watch",
      "description": "Run jest in watch mode",
      "steps": [
        {
          "exec": "jest --watch"
        }
      ]
    },
    "upgrade": {
      "name": "upgrade",
      "description": "upgrade dependencies",
      "env": {
        "CI": "0"
      },
      "steps": [
        {
          "exec": "yarn upgrade npm-check-updates"
        },
        {
          "exec": "npm-check-updates --upgrade --target=minor --peer --dep=dev,peer,prod,optional --filter=@types/jest,@types/jsonpath-plus,@types/mock-fs,@types/mustache,@types/node-fetch,@types/node,@types/uuid,@typescript-eslint/eslint-plugin,@typescript-eslint/parser,aws-cdk,aws-sdk-client-mock-jest,aws-sdk-client-mock,esbuild,eslint-import-resolver-node,eslint-import-resolver-typescript,eslint-plugin-import,eslint,jest,jest-junit,mock-fs,npm-check-updates,projen,ts-jest,ts-node,typescript,@aws-cdk/aws-glue-alpha,@aws-lambda-powertools/logger,@aws-lambda-powertools/metrics,@aws-sdk/client-acm,@aws-sdk/client-athena,@aws-sdk/client-cloudformation,@aws-sdk/client-cloudwatch,@aws-sdk/client-dynamodb,@aws-sdk/client-ec2,@aws-sdk/client-ecs,@aws-sdk/client-elastic-load-balancing-v2,@aws-sdk/client-emr-serverless,@aws-sdk/client-glue,@aws-sdk/client-iam,@aws-sdk/client-kafka,@aws-sdk/client-kafkaconnect,@aws-sdk/client-lambda,@aws-sdk/client-quicksight,@aws-sdk/client-redshift-data,@aws-sdk/client-redshift-serverless,@aws-sdk/client-redshift,@aws-sdk/client-route-53,@aws-sdk/client-s3,@aws-sdk/client-secrets-manager,@aws-sdk/client-sfn,@aws-sdk/client-sns,@aws-sdk/client-sqs,@aws-sdk/client-ssm,@aws-sdk/client-sts,@aws-sdk/credential-providers,@aws-sdk/lib-dynamodb,@aws-sdk/types,@aws-sdk/util-dynamodb,@smithy/node-http-handler,@smithy/util-stream-node,@types/aws-lambda,aws-cdk-lib,cdk-bootstrapless-synthesizer,cdk-nag,cidr-block,constructs,cron-parser,express-validator,express,i18next-fs-backend,i18next,json-difference,jsonpath-plus,jsonwebtoken,jwks-rsa,mustache,node-cache,node-fetch,sql-formatter,ts-json-object,uuid"
        },
        {
          "exec": "yarn install --check-files"
        },
        {
          "exec": "yarn upgrade @types/jest @types/jsonpath-plus @types/mock-fs @types/mustache @types/node-fetch @types/node @types/uuid @typescript-eslint/eslint-plugin @typescript-eslint/parser aws-cdk aws-sdk-client-mock-jest aws-sdk-client-mock esbuild eslint-import-resolver-node eslint-import-resolver-typescript eslint-plugin-import eslint jest jest-junit mock-fs npm-check-updates projen ts-jest ts-node typescript @aws-cdk/aws-glue-alpha @aws-lambda-powertools/logger @aws-lambda-powertools/metrics @aws-sdk/client-acm @aws-sdk/client-athena @aws-sdk/client-cloudformation @aws-sdk/client-cloudwatch @aws-sdk/client-dynamodb @aws-sdk/client-ec2 @aws-sdk/client-ecs @aws-sdk/client-elastic-load-balancing-v2 @aws-sdk/client-emr-serverless @aws-sdk/client-glue @aws-sdk/client-iam @aws-sdk/client-kafka @aws-sdk/client-kafkaconnect @aws-sdk/client-lambda @aws-sdk/client-quicksight @aws-sdk/client-redshift-data @aws-sdk/client-redshift-serverless @aws-sdk/client-redshift @aws-sdk/client-route-53 @aws-sdk/client-s3 @aws-sdk/client-secrets-manager @aws-sdk/client-sfn @aws-sdk/client-sns @aws-sdk/client-sqs @aws-sdk/client-ssm @aws-sdk/client-sts @aws-sdk/credential-providers @aws-sdk/lib-dynamodb @aws-sdk/types @aws-sdk/util-dynamodb @smithy/node-http-handler @smithy/util-stream-node @types/aws-lambda aws-cdk-lib cdk-bootstrapless-synthesizer cdk-nag cidr-block constructs cron-parser express-validator express i18next-fs-backend i18next json-difference jsonpath-plus jsonwebtoken jwks-rsa mustache node-cache node-fetch sql-formatter ts-json-object uuid"
        },
        {
          "exec": "npx projen"
        },
        {
          "spawn": "post-upgrade"
        }
      ]
    },
    "watch": {
      "name": "watch",
      "description": "Watches changes in your source code and rebuilds and deploys to the current account",
      "steps": [
        {
          "exec": "cdk deploy --hotswap"
        },
        {
          "exec": "cdk watch"
        }
      ]
    }
  },
  "env": {
    "PATH": "$(npx -c \"node --print process.env.PATH\")"
  },
  "//": "~~ Generated by projen. To modify, edit .projenrc.js and run \"npx projen\"."
}
